<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.xiongyayun.boot</groupId>
		<artifactId>athena-spring-boot-build</artifactId>
		<version>${revision}</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>
    <artifactId>athena-spring-boot-dependencies</artifactId>
    <packaging>pom</packaging>
    <name>Athena Spring Boot Dependencies</name>
    <description>依赖</description>

    <properties>
        <spring-boot.version>2.5.4</spring-boot.version>
		<spring-boot-admin.version>2.5.1</spring-boot-admin.version>
		<druid.version>1.2.6</druid.version>

        <aliyun-sdk-oss.version>3.11.1</aliyun-sdk-oss.version>
        <alibaba-nacos.version>0.2.10</alibaba-nacos.version>

        <spring-security-oauth2.version>2.5.1.RELEASE</spring-security-oauth2.version>
        <java-jwt.version>3.11.0</java-jwt.version>
        <hutool-all.version>5.7.12</hutool-all.version>
        <mybatis-plus-boot.version>3.4.3.3</mybatis-plus-boot.version>
        <mybatis-spring-boot.version>2.2.0</mybatis-spring-boot.version>
        <mybatis-generator.version>1.4.0</mybatis-generator.version>
        <mapper-spring-boot.version>2.1.5</mapper-spring-boot.version>
        <tk.mybatis.mapper.version>4.1.5</tk.mybatis.mapper.version>
        <pagehelper-spring-boot.version>1.3.1</pagehelper-spring-boot.version>
        <pagehelper.version>5.2.1</pagehelper.version>
        <jasypt-spring-boot.version>3.0.4</jasypt-spring-boot.version>
        <alibaba-fastjson.version>1.2.78</alibaba-fastjson.version>
        <flywaydb.version>7.3.2</flywaydb.version>
        <pentaho-kettle.version>9.3.0.0-190</pentaho-kettle.version>
        <xxl-job.version>2.3.0</xxl-job.version>

        <!-- Plugin versions -->
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>
		<maven-plugin-api.version>3.6.3</maven-plugin-api.version>
		<maven-plugin-annotations.version>3.6.0</maven-plugin-annotations.version>
		<maven-plugin-plugin.version>3.6.0</maven-plugin-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <jasypt-maven-plugin.version>3.0.3</jasypt-maven-plugin.version>
        <dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
        <build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>
        <flatten-maven-plugin.version>1.2.7</flatten-maven-plugin.version>
        <xml-maven-plugin.version>1.0.2</xml-maven-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot Dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-parent</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-dependencies</artifactId>
				<version>${spring-boot-admin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

            <!-- athena -->
			<dependency>
				<groupId>com.xiongyayun.boot</groupId>
				<artifactId>athena-spring-boot</artifactId>
				<version>${revision}</version>
			</dependency>
            <dependency>
                <groupId>com.xiongyayun.boot</groupId>
                <artifactId>athena-spring-boot-actuator</artifactId>
                <version>${revision}</version>
            </dependency>
			<dependency>
				<groupId>com.xiongyayun.boot</groupId>
				<artifactId>athena-spring-boot-actuator-autoconfigure</artifactId>
				<version>${revision}</version>
			</dependency>
            <dependency>
                <groupId>com.xiongyayun.boot</groupId>
                <artifactId>athena-spring-boot-autoconfigure</artifactId>
                <version>${revision}</version>
            </dependency>
<!--            <dependency>-->
<!--                <groupId>com.xiongyayun.boot</groupId>-->
<!--                <artifactId>athena-spring-boot-plugins</artifactId>-->
<!--                <version>${revision}</version>-->
<!--            </dependency>-->
        	<dependency>
                <groupId>com.xiongyayun.boot</groupId>
                <artifactId>athena-spring-boot-starters</artifactId>
                <version>${revision}</version>
        	</dependency>
			<dependency>
                <groupId>com.xiongyayun.boot</groupId>
                <artifactId>athena-spring-boot-starter</artifactId>
                <version>${revision}</version>
        	</dependency>
			<dependency>
				<groupId>com.xiongyayun.boot</groupId>
				<artifactId>athena-spring-boot-starter-actuator</artifactId>
				<version>${revision}</version>
			</dependency>
<!--        	<dependency>-->
<!--                <groupId>com.xiongyayun.boot</groupId>-->
<!--                <artifactId>athena-spring-boot-plugin-oauth2-client</artifactId>-->
<!--                <version>${revision}</version>-->
<!--        	</dependency>-->
<!--        	<dependency>-->
<!--                <groupId>com.xiongyayun.boot</groupId>-->
<!--                <artifactId>athena-spring-boot-plugin-oauth2-server</artifactId>-->
<!--                <version>${revision}</version>-->
<!--        	</dependency>-->
<!--        	<dependency>-->
<!--                <groupId>com.xiongyayun.boot</groupId>-->
<!--                <artifactId>athena-spring-boot-plugin-security</artifactId>-->
<!--                <version>${revision}</version>-->
<!--        	</dependency>-->
<!--            <dependency>-->
<!--                <groupId>com.xiongyayun.boot</groupId>-->
<!--                <artifactId>athena-spring-boot-starter-docker</artifactId>-->
<!--                <version>${revision}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>com.xiongyayun.boot</groupId>-->
<!--                <artifactId>athena-spring-boot-starter-mybatis</artifactId>-->
<!--                <version>${revision}</version>-->
<!--            </dependency>-->

            <!-- druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- Maven Plugin -->
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-plugin-api</artifactId>
                <version>${maven-plugin-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugin-tools</groupId>
                <artifactId>maven-plugin-annotations</artifactId>
                <version>${maven-plugin-annotations.version}</version>
            </dependency>

            <!-- Aliyun Oss -->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-sdk-oss.version}</version>
            </dependency>

			<dependency>
				<groupId>com.alipay.sdk</groupId>
				<artifactId>alipay-sdk-java</artifactId>
				<version>4.10.209.ALL</version>
			</dependency>

            <!-- Aliyun Nacos -->
            <dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>nacos-config-spring-boot-starter</artifactId>
                <version>${alibaba-nacos.version}</version>
            </dependency>
        	<dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>nacos-discovery-spring-boot-starter</artifactId>
                <version>${alibaba-nacos.version}</version>
        	</dependency>

            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>${spring-security-oauth2.version}</version>
            </dependency>

            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
            </dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>2.9.0</version>
			</dependency>
        	<!-- mybatis-plus -->
        	<dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot.version}</version>
        	</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter-test</artifactId>
				<version>${mybatis-plus-boot.version}</version>
			</dependency>
        	<dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-core</artifactId>
                <version>${mybatis-plus-boot.version}</version>
        	</dependency>
        	<dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${mybatis-plus-boot.version}</version>
        	</dependency>
        	<dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>3.5.0</version>
        	</dependency>
        	<dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatis-plus-boot.version}</version>
        	</dependency>
        	<dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatis-plus-boot.version}</version>
        	</dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot.version}</version>
            </dependency>
        	<dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis-generator.version}</version>
        	</dependency>
<!--            <dependency>-->
<!--                <groupId>tk.mybatis</groupId>-->
<!--                <artifactId>mapper-spring-boot-starter</artifactId>-->
<!--                <version>${mapper-spring-boot.version}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>tk.mybatis</groupId>-->
<!--                <artifactId>mapper</artifactId>-->
<!--                <version>${tk.mybatis.mapper.version}</version>-->
<!--            </dependency>-->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <!-- ip地址查询库-->
<!--            <dependency>-->
<!--                <groupId>org.lionsoul</groupId>-->
<!--                <artifactId>ip2region</artifactId>-->
<!--                <version>1.7.2</version>-->
<!--            </dependency>-->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot</artifactId>
                <version>${jasypt-spring-boot.version}</version>
            </dependency>
        	<dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt-spring-boot.version}</version>
        	</dependency>

            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>persistence-api</artifactId>
                <version>1.0.2</version>
            </dependency>
<!--        	<dependency>-->
<!--                <groupId>javax.xml.bind</groupId>-->
<!--                <artifactId>jaxb-api</artifactId>-->
<!--                <version>2.3.1</version>-->
<!--        	</dependency>-->
<!--        	<dependency>-->
<!--                <groupId>com.sun.xml.bind</groupId>-->
<!--                <artifactId>jaxb-impl</artifactId>-->
<!--                <version>2.3.2</version>-->
<!--        	</dependency>-->
<!--        	<dependency>-->
<!--                <groupId>com.sun.xml.bind</groupId>-->
<!--                <artifactId>jaxb-core</artifactId>-->
<!--                <version>2.3.2</version>-->
<!--        	</dependency>-->
        	<dependency>
                <groupId>javax.activation</groupId>
                <artifactId>javax.activation-api</artifactId>
                <version>1.2.0</version>
        	</dependency>
        	<dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>1.3.2</version>
        	</dependency>
        	<dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${alibaba-fastjson.version}</version>
        	</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-boot-starter</artifactId>
				<version>3.0.0</version>
			</dependency>
			<!-- Swagger生成Api文档的增强解决方案 -->
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-spring-boot-starter</artifactId>
				<version>3.0.3</version>
			</dependency>

        	<dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flywaydb.version}</version>
        	</dependency>

        	<dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl-job.version}</version>
        	</dependency>
			<!-- https://nexus.pentaho.org/#browse/search=attributes.maven2.artifactId%3Dkettle-core%20AND%20attributes.maven2.groupId%3Dpentaho-kettle -->
        	<dependency>
                <groupId>pentaho-kettle</groupId>
                <artifactId>kettle-core</artifactId>
                <version>${pentaho-kettle.version}</version>
        	</dependency>
        	<dependency>
                <groupId>pentaho-kettle</groupId>
                <artifactId>kettle-engine</artifactId>
                <version>${pentaho-kettle.version}</version>
        	</dependency>
        	<dependency>
                <groupId>pentaho-kettle</groupId>
                <artifactId>kettle-ui-swt</artifactId>
                <version>${pentaho-kettle.version}</version>
        	</dependency>
        	<dependency>
                <groupId>pentaho-kettle</groupId>
                <artifactId>kettle-dbdialog</artifactId>
                <version>${pentaho-kettle.version}</version>
        	</dependency>

        	<dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-core</artifactId>
                <version>1.24.1</version>
        	</dependency>
        	<dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-parsers</artifactId>
                <version>1.24.1</version>
        	</dependency>
        	<dependency>
                <groupId>org.xerial</groupId>
                <artifactId>sqlite-jdbc</artifactId>
                <version>3.32.3</version>
        	</dependency>
        	<dependency>
                <groupId>com.github.jai-imageio</groupId>
                <artifactId>jai-imageio-jpeg2000</artifactId>
                <version>1.3.0</version>
        	</dependency>

<!--			<dependency>-->
<!--				<groupId>com.fasterxml.jackson.dataformat</groupId>-->
<!--				<artifactId>jackson-dataformat-xml</artifactId>-->
<!--				<version>2.12.0</version>-->
<!--			</dependency>-->
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>build-info</goal>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
                <plugin>
					<!--
					https://github.com/ulisesbocchio/jasypt-spring-boot
					加密: mvn jasypt:encrypt-value -Djasypt.encryptor.password="the password" -Djasypt.plugin.value="需要加密的值"
					解密: mvn jasypt:decrypt-value -Djasypt.encryptor.password="the password" -Djasypt.plugin.value="需要解密的值"
					-->
                	<groupId>com.github.ulisesbocchio</groupId>
                	<artifactId>jasypt-maven-plugin</artifactId>
                	<version>${jasypt-maven-plugin.version}</version>
                </plugin>
				<!-- Source -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<!-- 绑定source插件到Maven的生命周期,并在生命周期后执行绑定的source的goal -->
					<executions>
						<execution>
							<id>bundle-sources</id>
							<!-- 绑定source插件到Maven的生命周期 -->
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
								<goal>test-jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 打包 -->
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
							</manifest>
							<manifestEntries>
								<Implementation-Description>${project.description}</Implementation-Description>
								<Built-By>Athena</Built-By>
								<Email>xiongyayun428@163.com</Email>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.version}</version>
                </plugin>
                <plugin>
                	<groupId>org.codehaus.mojo</groupId>
                	<artifactId>build-helper-maven-plugin</artifactId>
                	<version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
					<!-- 添加flatten-maven-plugin用于替换${revision} -->
                	<groupId>org.codehaus.mojo</groupId>
                	<artifactId>flatten-maven-plugin</artifactId>
                	<version>${flatten-maven-plugin.version}</version>
					<configuration>
						<!-- 是否更新pom文件 -->
						<updatePomFile>true</updatePomFile>
						<flattenMode>resolveCiFriendliesOnly</flattenMode>
					</configuration>
					<executions>
						<execution>
							<id>flatten</id>
							<phase>process-resources</phase>
							<goals>
								<goal>flatten</goal>
							</goals>
						</execution>
						<execution>
							<id>flatten.clean</id>
							<phase>clean</phase>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
					</executions>
                </plugin>
                <plugin>
                	<groupId>org.codehaus.mojo</groupId>
                	<artifactId>xml-maven-plugin</artifactId>
                	<version>${xml-maven-plugin.version}</version>
                </plugin>
                <plugin>
                	<groupId>org.mybatis.generator</groupId>
                	<artifactId>mybatis-generator-maven-plugin</artifactId>
                	<version>${mybatis-generator.version}</version>
                </plugin>
                <plugin>
                	<groupId>org.flywaydb</groupId>
                	<artifactId>flyway-maven-plugin</artifactId>
                	<version>${flywaydb.version}</version>
                </plugin>
				<!-- 代码覆盖率 -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
				</plugin>
            </plugins>
        </pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
